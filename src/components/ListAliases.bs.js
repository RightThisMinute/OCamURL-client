// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var List                                = require("bs-platform/lib/js/list.js");
var $$Array                             = require("bs-platform/lib/js/array.js");
var React                               = require("react");
var Pervasives                          = require("bs-platform/lib/js/pervasives.js");
var ReasonReact                         = require("reason-react/src/ReasonReact.js");
var Alias$ReactTemplate                 = require("../alias.bs.js");
var AliasWidget$ReactTemplate           = require("./AliasWidget.bs.js");
var QueryAliases$ReactTemplate          = require("../actions/QueryAliases.bs.js");
var MutationGenerateAlias$ReactTemplate = require("../actions/MutationGenerateAlias.bs.js");

function str(prim) {
  return prim;
}

var component = ReasonReact.reducerComponent("QueryAliases");

function make(url, aliasList, _) {
  var renderList = function (lst, _) {
    var match = List.partition((function (a) {
            return +(Alias$ReactTemplate.status(a) === /* Enabled */-880661407);
          }), lst);
    var disabled = match[1];
    var elementOfAlias = function (a) {
      return ReasonReact.element(/* Some */[Pervasives.string_of_int(Alias$ReactTemplate.id(a))], /* None */0, AliasWidget$ReactTemplate.make(a, (function () {
                        return QueryAliases$ReactTemplate.reload(url);
                      }), /* array */[]));
    };
    return React.createElement("div", undefined, React.createElement("div", {
                    className: "enabled"
                  }, React.createElement("h2", undefined, "Enabled"), $$Array.map(elementOfAlias, $$Array.of_list(match[0]))), disabled ? React.createElement("div", {
                      className: "disabled"
                    }, React.createElement("h2", undefined, "Disabled"), $$Array.map(elementOfAlias, $$Array.of_list(disabled))) : null);
  };
  var newrecord = component.slice();
  newrecord[/* willReceiveProps */3] = (function (param) {
      var state = param[/* state */2];
      var match = state[/* firstLoad */0];
      if (typeof aliasList === "number") {
        if (aliasList === 879244094) {
          QueryAliases$ReactTemplate.run(url);
        }
        
      } else if (aliasList[0] === 218348581) {
        var match$1 = aliasList[1];
        var exit = 0;
        if (match$1[0]) {
          exit = 1;
        } else if (match$1[1] !== 431224398) {
          exit = 1;
        } else if (match !== 0) {
          MutationGenerateAlias$ReactTemplate.run("alias-list", url);
        }
        if (exit === 1) {
          if (match$1[1] === 389603065) {
            QueryAliases$ReactTemplate.reload(url);
          }
          
        }
        
      }
      if (typeof aliasList === "number") {
        if (aliasList !== 879244094) {
          return state;
        } else {
          return /* record */[/* firstLoad : true */1];
        }
      } else if (aliasList[0] !== 218348581) {
        return state;
      } else {
        return /* record */[/* firstLoad : false */0];
      }
    });
  newrecord[/* didMount */4] = (function () {
      QueryAliases$ReactTemplate.run(url);
      return /* NoUpdate */0;
    });
  newrecord[/* render */9] = (function () {
      var match;
      if (typeof aliasList === "number") {
        match = /* tuple */[
          "loading",
          React.createElement("p", {
                className: "status loading"
              }, "Loading...")
        ];
      } else if (aliasList[0] >= 479410653) {
        match = /* tuple */[
          "failed-loading",
          React.createElement("p", {
                className: "status failure"
              }, aliasList[1])
        ];
      } else {
        var match$1 = aliasList[1];
        var lst = match$1[0];
        if (lst) {
          var status = match$1[1];
          var status$prime = status !== 431224398 ? (
              status >= 724399881 ? "reloading" : "stale"
            ) : "fresh";
          match = /* tuple */[
            "loaded-" + status$prime,
            renderList(lst, status)
          ];
        } else {
          match = /* tuple */[
            "loaded-empty",
            React.createElement("p", {
                  className: "status empty"
                }, "No aliases.")
          ];
        }
      }
      return React.createElement("section", {
                  className: "alias-list status-" + match[0]
                }, React.createElement("h1", undefined, "Aliases"), match[1]);
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[/* firstLoad : true */1];
    });
  newrecord[/* reducer */12] = (function (_, _$1) {
      return /* NoUpdate */0;
    });
  return newrecord;
}

exports.str       = str;
exports.component = component;
exports.make      = make;
/* component Not a pure module */
