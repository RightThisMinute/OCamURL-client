// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var List                      = require("bs-platform/lib/js/list.js");
var Block                     = require("bs-platform/lib/js/block.js");
var Curry                     = require("bs-platform/lib/js/curry.js");
var React                     = require("react");
var $$String                  = require("bs-platform/lib/js/string.js");
var ReasonReact               = require("reason-react/src/ReasonReact.js");
var Url$ReactTemplate         = require("./url.bs.js");
var ListAliases$ReactTemplate = require("./ListAliases.bs.js");
var LookupInput$ReactTemplate = require("./LookupInput.bs.js");

function str(prim) {
  return prim;
}

function optDefault($$default, param) {
  if (param) {
    return param[0];
  } else {
    return $$default;
  }
}

var component = ReasonReact.reducerComponent("LookupPage");

function make() {
  var onURLInputSubmit = function (url) {
    return /* InputURLChange */[url];
  };
  var newrecord = component.slice();
  newrecord[/* render */9] = (function (param) {
      var input = param[/* state */2][/* input */0];
      var urlInQuery = List.find_all((function (p) {
                return +($$String.lowercase(p[/* key */0]) === "url");
              }))(List.rev(Url$ReactTemplate.Params[/* toList */1](Url$ReactTemplate.Params[/* ofString */2](window.location.search))));
      var initialValue = urlInQuery ? optDefault("", urlInQuery[0][/* value */1]) : "";
      var details = typeof input === "number" ? null : (
          input[0] >= 144245463 ? React.createElement("p", {
                  className: "error invalid-input"
                }, "That doesn\'t look like a valid URL: " + (String(input[1]) + "")) : ReasonReact.element(/* None */0, /* None */0, ListAliases$ReactTemplate.make(input[1], /* array */[]))
        );
      return React.createElement("section", undefined, React.createElement("h1", undefined, "OCamURL"), React.createElement("p", undefined, "Enter a URL or alias below."), ReasonReact.element(/* None */0, /* None */0, LookupInput$ReactTemplate.make(initialValue, Curry._1(param[/* reduce */1], onURLInputSubmit), /* array */[])), details);
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[/* input : Unset */974938825];
    });
  newrecord[/* reducer */12] = (function (action, _) {
      return /* Update */Block.__(0, [/* record */[/* input */action[0]]]);
    });
  return newrecord;
}

exports.str        = str;
exports.optDefault = optDefault;
exports.component  = component;
exports.make       = make;
/* component Not a pure module */
