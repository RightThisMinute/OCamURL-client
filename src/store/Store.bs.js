// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Reductive                     = require("reductive/src/reductive.js");
var State$ReactTemplate           = require("./State.bs.js");
var Action$ReactTemplate          = require("./Action.bs.js");
var StoreMiddleware$ReactTemplate = require("./StoreMiddleware.bs.js");

function reducer(state, action) {
  if (action[0] === Action$ReactTemplate.GeneratingAlias) {
    var aliasStatuses = State$ReactTemplate.setAliasStatus(state, action[1], /* Saving */-674467366);
    return /* record */[
            /* aliasStatuses */aliasStatuses,
            /* dataIsStale */state[/* dataIsStale */1],
            /* messages */state[/* messages */2]
          ];
  } else if (action[0] === Action$ReactTemplate.GeneratedAlias) {
    var aliasStatuses$1 = State$ReactTemplate.setAliasStatus(state, action[1], /* Saved */179944039);
    return /* record */[
            /* aliasStatuses */aliasStatuses$1,
            /* dataIsStale : true */1,
            /* messages : :: */[
              /* tuple */[
                /* Info */815031438,
                "Generated alias " + (action[2] + ".")
              ],
              /* [] */0
            ]
          ];
  } else if (action[0] === Action$ReactTemplate.GeneratingAliasFailed) {
    var message = action[2];
    var aliasStatuses$2 = State$ReactTemplate.setAliasStatus(state, action[1], /* `Failed */[
          479410653,
          message
        ]);
    return /* record */[
            /* aliasStatuses */aliasStatuses$2,
            /* dataIsStale */state[/* dataIsStale */1],
            /* messages : :: */[
              /* tuple */[
                /* Error */106380200,
                message
              ],
              /* [] */0
            ]
          ];
  } else {
    return state;
  }
}

function thunkedLogger(store, next) {
  return (function (param) {
      return StoreMiddleware$ReactTemplate.thunk(store, (function (param) {
                    return StoreMiddleware$ReactTemplate.logger(store, next, param);
                  }), param);
    });
}

var store = Reductive.Store[/* create */0](reducer, State$ReactTemplate.initial, /* Some */[thunkedLogger], /* () */0);

var partial_arg = Reductive.Store[/* dispatch */4];

function dispatch(param) {
  return partial_arg(store, param);
}

exports.reducer       = reducer;
exports.thunkedLogger = thunkedLogger;
exports.store         = store;
exports.dispatch      = dispatch;
/* store Not a pure module */
